#!/bin/bash
DIR="apostrophe-test"
MODULE_NAME='dynamic-table'
MYDIR="node_modules/$MODULE_NAME"
FILESTOCOPY=("collections" "views" "public" "index.js" "package.json" "callbackFields.js" "sub-modules")
TESTCOPY=("tests")
# Must use escape \ character for Windows Platform
MODULESCOPY=("lib\\modules\\apostrophe-pages\\views\\pages\\home.html" "lib\\modules\\dynamic-table\\index.js")
NPMSAVE=("apostrophe-workflow" "custom-code-editor")
NPMSAVEDEV=("env2" "nightwatch" "https://github.com/apostrophecms/apostrophe-nightwatch-tools.git" "chromedriver" "geckodriver" "selenium-server")

copy_module (){
    echo "Copy our module to $PWD inside node_modules to test"
    if [ "$(ls -A $MYDIR && du $MYDIR)" ];then
        echo "$MYDIR file already created"
    else
        mkdir "$MYDIR"
    fi

    if [[ "$(declare -p FILESTOCOPY)" =~ "declare -a" ]];then
        echo "Running Loop"
        for files in ${!FILESTOCOPY[@]}; do
            echo "Copying ${FILESTOCOPY[$files]} to $MYDIR directory"
            cp -r ../${FILESTOCOPY[$files]} "$MYDIR"
        done
    fi

    if [[ "$(declare -p TESTCOPY)" =~ "declare -a" ]];then
        for files in ${!TESTCOPY[@]}; do
            echo "Copying ${TESTCOPY[$files]} to $DIR directory"
            cp -r ../${TESTCOPY[$files]} .
        done
    fi

    if [[ "$(declare -p MODULESCOPY)" =~ "declare -a" ]];then
        for files in ${!MODULESCOPY[@]}; do
            echo "Copying ${MODULESCOPY[$files]} to $DIR directory"
            if [ "$(ls -A ${MODULESCOPY[$files]} && du ${MODULESCOPY[$files]})" ];then
                echo "${MODULESCOPY[$files]} directory exists"
                cp -r "..\\tests\\apos\\${MODULESCOPY[$files]}" ".\\${MODULESCOPY[$files]}"
            else
                # Double slashes parameter issue reference: https://superuser.com/a/1490175
                printf "\n\n\n"
                echo "********************************************"
                echo "Press 'F' to copy the file, NOT DIRECTORY!"
                echo "********************************************"
                xcopy "..\\tests\\apos\\${MODULESCOPY[$files]}" ".\\${MODULESCOPY[$files]}" //F //Y
            fi
        done
    fi
    echo "Your $MODULE_NAME copied to $MYDIR"
}

install_packages(){
    echo "Installing Save Package(s)"
    echo "**********************************"
    for package in ${!NPMSAVE[@]}; do
        tput cup 0 5
        echo "${NPMSAVE[$package]}"
    done
    echo "**********************************"
    npm install --save ${NPMSAVE[@]}

    echo "Installing Save Dev Package(s)"
    echo "**********************************"
    for package in ${!NPMSAVEDEV[@]}; do
        tput cup 0 5
        echo "${NPMSAVEDEV[$package]}"
    done
    echo "**********************************"
    npm install --save-dev ${NPMSAVEDEV[@]}
}

add_user(){
    clear
    echo "Adding new user"
    echo "Use demo password"
    echo "*****************************"
    echo "Password : demo"
    echo "*****************************"
    node app apostrophe-users:add admin admin
}

checking_mongodump(){
    printf "\n\n********************************\n"
    if [ "$(ls -A mongodump && du mongodump)" ];then
        echo "mongodump folder already created"
    else
        echo "Creating new folder called mongodump"
        mkdir mongodump/
        echo "Create apostrophe-test dump"
        mongodump -d apostrophe-test -o mongodump/
    fi
    printf "********************************\n\n"
}

# Checking Apostrophe CLI installed in a system
if [ "$(apostrophe --version)" ];then
    echo "Apostrophe CLI existed"
    echo "*************************"
else
    echo "Installing Apostrophe CLI"
    npm i apostrophe-cli -g &&
    printf "*************************"
fi
# init
# Look for apostrophe-test directory
# script $(ls -A $DIR) checking directory
# script $(du $DIR) check file size existed
if [ "$(ls -A $DIR && du $DIR)" ];then
    echo "apostrophe-test folder already existed"
    echo "Deleting existing test folder"
    rm -r -f -v "$DIR"/tests &&
    clear
    printf "\n\nCopy app.js to testing directory\n"
    printf "*******************************\n"
    cp -v tests/apos/app.js "$DIR" &&
    printf "*******************************\n\n"
    cd "$DIR" &&
    printf "Re-installing Packages to keep updated \n"
    npm install &&
    printf "\nPackage Installed."
    clear
    copy_module
    checking_mongodump
else
    echo "Creating apostrophe-test folder"
    apostrophe create-project "$DIR" &&
    printf "\n\nCopy app.js to testing directory\n"
    printf "*******************************\n"
    cp -v tests/apos/app.js "$DIR" &&
    printf "*******************************\n\n"
    cd "$DIR" &&
    echo "Entering current directory $PWD"
    echo "Apostrophe Boilerplate created"
    install_packages
    npm install
    copy_module
    checking_mongodump
    add_user
fi

# Running Test
echo "** running test from"
echo $PWD
echo "*******************************"
echo "Begin Test"
node_modules/.bin/nightwatch --config ./tests/nightwatch.conf.js -e local &&
echo "TEST ENDED"