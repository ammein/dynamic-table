module.exports = {
    extend : "apostrophe-pieces",
    name : "dynamic-table",
    label : "Dynamic Table",
    alias : "dynamicTable",
    moogBundle : {
        modules: ['dynamic-table-schemas', 'dynamic-table-widgets'],
        directory: 'lib/modules'
    },
    beforeConstruct : function(self,options){
        // Lean or Non-Lean Assets to decide which fields to use 
        var originalFields = [];
        if (options.apos.assets.options.lean) {
            originalFields = [
                {
                    name: "ajaxOptions",
                    label: "Ajax Options",
                    type: "string",
                    textarea: true,
                    htmlHelp: `Example :
            <br><br><pre><code style="font-family: monospace;background-color: #EEE;padding: 10px;font: 300 12px monospace;display: block;">ajax: {
    url: "some/url/data.txt", // url to remote data
    content: {
        type: "csv", // specify the content
    },
    load: function(xhr) {
        // process and return the response data
    }
}</code></pre>You can refer here for more info : <a href="https://github.com/fiduswriter/Simple-DataTables/wiki/ajax" target="_blank">DataTables Vanilla JS Ajax Data Source</a><br>`
                }
            ];
        } else {
            originalFields = [
                {
                    name: "ajaxOptions",
                    label: "Ajax Options",
                    type: "string",
                    textarea: true,
                    htmlHelp: `Example :
            <br><br><pre><code style="font-family: monospace;background-color: #EEE;padding: 10px;font: 300 12px monospace;display: block;">{
  ajax: "data/arrays.txt"
}</code></pre>You can refer here for more info : <a href="https://datatables.net/examples/ajax/" target="_blank">DataTables JQuery Ajax Data Source</a><br>`
                }
            ]
        }
        options.addFields = [
            {
                name: 'row',
                label: 'Number of Row(s)',
                type: 'integer'
            },
            {
                name: 'column',
                label: 'Number of Column(s)',
                type: 'integer'
            },
            {
                name: "data",
                label: "Custom Data",
                type: "string",
                textarea: true,
                help: "This field is auto generated by your row & column input."
            }
        ].concat(options.addFields || []);

        // Combine fields
        options.addFields = options.addFields.concat(originalFields);

        options.arrangeFields = [
            {
                name: "table",
                label: "Custom Table",
                fields: ["row", "column", "data"]
            },
            {
                name: "ajax",
                label: "Ajax Table",
                fields: ["ajaxOptions"]
            },
            {
                name: "settings",
                label: "Settings",
                fields: [],
                last: true
            }
        ].concat(options.arrangeFields || []);
    }
}